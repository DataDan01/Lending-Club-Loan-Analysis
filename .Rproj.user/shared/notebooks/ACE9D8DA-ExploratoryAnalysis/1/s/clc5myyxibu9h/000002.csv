"0","# This function installs any libraries that are missing and needed for the script"
"0","lib_load <- function(package) {"
"0","  if(!(package %in% rownames(installed.packages()))) {"
"0","    "
"0","      message(sprintf(""This portion of the code requires the %s library\nIt doesn't look like you have it installed\nWould you like to install it now?"", "
"0","              package))"
"0","    "
"0","      response <- readline(prompt = ""Enter Y or N: "")"
"0","    "
"0","      if(toupper(response) == ""Y"") {"
"0","        install.packages(package)"
"0","        library(package, character.only = T)"
"0","        return(cat(""Installed and loaded package""))"
"0","      }"
"0","      "
"0","      if(toupper(response) == ""N"") return(cat(""Package not installed""))"
"0","  } else"
"0","    return(library(package, character.only = T))"
"0","}"
"0","# Downloading/loading the data file and dictionary"
"0","lib_load(""data.table"")"
"0","lib_load(""openxlsx"")"
"0","lib_load(""dplyr"")"
"0","if(!all(c(""LoanStats_2017Q1.csv"",""LCDataDictionary.xlsx"") %in% list.files(""../Data""))) {"
"0","  message(""Downloading and reading in data"")"
"0","  "
"0","  # Getting the data files"
"0","  temp <- tempfile()"
"0","  download.file(""https://resources.lendingclub.com/LoanStats_2017Q1.csv.zip"", temp, mode = ""wb"")"
"0","  unzip(zipfile = temp, files = ""LoanStats_2017Q1.csv"", exdir = ""../Data"")"
"0","  loan_data <- fread(""../Data/LoanStats_2017Q1.csv"", data.table = F); rm(temp)"
"0","  download.file(""https://resources.lendingclub.com/LCDataDictionary.xlsx"", "
"0","                ""../Data/LCDataDictionary.xlsx"", method = ""curl"")"
"0","  "
"0","  # Downloading and combining the data dictionary spreadsheet"
"0","  data_dict <- list(read.xlsx(""../Data/LCDataDictionary.xlsx"", sheet = 1),"
"0","                     read.xlsx(""../Data/LCDataDictionary.xlsx"", sheet = 2),"
"0","                     read.xlsx(""../Data/LCDataDictionary.xlsx"", sheet = 3))"
"0","  "
"0","  data_dict <- lapply(data_dict, function(df) { "
"0","        colnames(df) <- c(""var"",""desc"") "
"0","        return(df)"
"0","      }) %>% rbindlist() %>% unique()"
"0","  "
"0","} else {"
"0","  "
"0","  message(""Loading in the data"")"
"0","  "
"0","  loan_data <- fread(""../Data/LoanStats_2017Q1.csv"", data.table = F)"
"0","  "
"0","  data_dict <- list(read.xlsx(""../Data/LCDataDictionary.xlsx"", sheet = 1),"
"0","                   read.xlsx(""../Data/LCDataDictionary.xlsx"", sheet = 2),"
"0","                   read.xlsx(""../Data/LCDataDictionary.xlsx"", sheet = 3))"
"0","  "
"0","  data_dict <- lapply(data_dict, function(df) { "
"0","        colnames(df) <- c(""var"",""desc"") "
"0","        return(df)"
"0","      }) %>% rbindlist() %>% unique()"
"0","}"
"0","## Basic data scrubbing ahead of analysis ##"
"0","# Dropping blank or redacted columns"
"0","loan_data[,c(""id"",""member_id"",""url"",""desc"",""zip_code"",""policy_code"")] = NULL"
"0","# Extracting numbers out of strings and converting to the numeric type"
"0","loan_data[,c(""int_rate"",""revol_util"")] <- sapply(loan_data[,c(""int_rate"",""revol_util"")], "
"0","                                                       "
"0"," function(mixed_string) {"
"0","   "
"0","  gsub(pattern = ""[^\\d|.]+"", replacement = """", x = mixed_string, perl = TRUE) %>% as.numeric()"
"0","  "
"0","})"
"0","# Making every other non-string a numeric value"
"0","loan_data[,c(1:3,5,6,12,20,21,23:30,32:40,42,45:46,48:49,52:106,108:116)] <- "
"0","  loan_data[,c(1:3,5,6,12,20,21,23:30,32:40,42,45:46,48:49,52:106,108:116)] %>% "
"0","                        sapply(as.numeric) "
"0","# Trimming leading and trailing whitespace from character vectors"
"0","loan_data[,unlist(lapply(loan_data,class)) == ""character""] = sapply(loan_data[,unlist(lapply(loan_data,class)) == ""character""], trimws)"
"0","# Grabbing all of the column classes"
"0","col_classes <- table(unlist(lapply(loan_data,class)))"
